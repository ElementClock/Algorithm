%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%函数名称：适应度函数
%%入口参数：初始种群
%%出口参数：种群适应度值    一维列向量
%%说明：
    %%种群适应度以种群路径大小作为主要参考标准，路径越短，适应度越大。以一个较大的数减去种群路径长度作为种群的适应度。
    %%有障碍物的情况下的环境建模，在此处进行。向量x3、y3、x4、y4即为障碍物边界，并对所有种群的相邻点进行干涉测试，如果有交点则直接将其适应度设为0。
    %%函数in=inpolygon(x(j,:),y(j,:),xv,yv);
    %%为检测种群点是否在障碍物内部，其实有了上面的干涉检测，该部分程序不用也可以。
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

function fitvalue=calfitvalue(x,y)
yv=[8,8,12,12,8];
xv=[8,12,12,8,8];
[px,py]=size(x);
x3=[8 8 12 12 2 6 6 4 7 2 9 16 16 18 7 12 8 9 9 8];         %设置环境模型
y3=[8 12 12 8 2 2 4 6 15 15 16 10 18 1 6 2 14 14 18 18];        %x3、y3、x4、y4 为所有障碍物边界的相邻顶点组成的线段。
x4=[8 12 12 8 6 6 2 7 2 4 16 16 9 7 12 18 9 9 8 8];
y4=[12 12 8 8 2 4 2 15 15 6 10 18 16 6 2 1 14 18 18 14];

% x3=[0 3 3 0 0 8 8 0 10 13 13 10 9 16 16 9 14 15 15 14 6 10 10 6 2 6 6 2 17 20 20 17];         %设置环境模型
% y3=[8 8 9 9 2 2 4 4 4 4 1 1 13 13 11 11 9 9 5 5 9 9 7 7 15 15 12 12 11 11 13 13];        %x3、y3、x4、y4 为所有障碍物边界的相邻顶点组成的线段。
% x4=[3 3 0 0 8 8 0 0 13 13 10 10 16 16 9 9 15 15 14 14 10 10 6 6 6 6 2 2 20 20 17 17];
% y4=[8 9 9 8 2 4 4 2 4 1 1 4 13 11 11 13 9 5 5 9 9 7 7 9 15 12 12 15 11 13 13 11];
% 
% x3=[0 0 20 20   10 10 30 30   0 0 20 20   10 10 30 30   15 15 17 19 19   15 17 19 19 15   ];
% y3=[2 4 4 2   6 8 8 6   10 12 12 10   15 17 17 15   30 25 23 25 30   22 20 22 17 17   ];
% x4=[0 20 20 0   10 30 30 10   0 20 20 0   10 30 30 10   15 17 19 19 15   17 19 19 15 15   ];
% y4=[4 4 2 2   8 8 6 6   12 12 10 10   17 17 15 15   25 23 25 30 30   20 22 17 17 22   ];

% x3=[1 1 5 5 14 14 15 15 10 10 15 15 14 14 9 9 4 4    9 9 10 10    19 19 20 20 39 39 40 40 20 20    19 20 20 19 19 14 14 19    4 4 5 5 9 9 14 14 10 10 5 5    17 17 19 19 20 20 22 22   24 24 25 25   25 25 29 29 30 30   9 9 20 20 10 10   24 25 25 14 14 24 24   29 29 35 35 30 30   24 24 35 35 34 34 30 30 29 29    34 34 35 35 39 39 40 40   34 34 40 40 39 39    34 35 35 34   29 29 30 30];
% y3=[39 40 40 35 35 40 40 34 34 25 25 19 19 24 24 34 34 39    39 45 45 39    43 35 35 39 39 29 29 40 40 43    32 32 24 24 29 29 30 30    30 4 4 19 19 14 14 15 15 20 20 30    14 15 15 20 20 15 15 14   19 30 30 19   14 15 15 20 20 14   2 10 10 9 9 2   10 10 4 4 5 5 10   4 10 10 9 9 4   34 35 35 29 29 34 34 25 25 34   25 19 19 24 24 19 19 25   14 15 15 0 0 14    7 7 0 0   10 14 14 10];
% x4=[1 5 5 14 14 15 15 10 10 15 15 14 14 9 9 4 4 1    9 10 10 9    19 20 20 39 39 40 40 20 20 19    20 20 19 19 14 14 19 19    4 5 5 9 9 14 14 10 10 5 5 4    17 19 19 20 20 22 22 17   24 25 25 24    25 29 29 30 30 25    9 20 20 10 10 9    25 25 14 14 24 24 25   29 35 35 30 30 29   24 35 35 34 34 30 30 29 29 24   34 35 35 39 39 40 40 34   34 40 40 39 39 34    35 35 34 34   29 30 30 29];
% y4=[40 40 35 35 40 40 34 34 25 25 19 19 24 24 34 34 39 39    45 45 39 39    35 35 39 39 29 29 40 40 43 43    32 24 24 29 29 30 30 32    4 4 19 19 14 14 15 15 20 20 30 30 15 15 20 20 15 15 14 14   30 30 19 19   15 15 20 20 14 14   10 10 9 9 2 2   10 4 4 5 5 10 10   10 10 9 9 4 4    35 35 29 29 34 34 25 25 34 34   19 19 24 24 19 19 25 25   15 15 0 0 14 14    7 0 0 7   14 14 10 10];

for j=1:1:px
    in=inpolygon(x(j,:),y(j,:),xv,yv);   %判断 点 是否在障碍物内
    for i=1:1:py-1
        x1(i)=x(j,i);
        y1(i)=y(j,i);
    end
    for i=2:1:py
        x2(i-1)=x(j,i);
        y2(i-1)=y(j,i);
    end
     ch=chack(x1,y1,x2,y2,x3,y3,x4,y4);   %判断种群相邻点连成的线段是否与所有障碍物边界相交
    if sum(in)>0 ||sum(sum(ch))>0        %如果矩阵 [ch] 所有元素的和不等于0,则说明存在某一条线段经过障碍物边界。
        dd(j)=0;
%           for i=1:1:py-1
%             d(i)=sqrt((x(j,i+1)-x(j,i)).^2+(y(j,i+1)-y(j,i)).^2);     %如果不经过障碍物，则求取该个体的路径长度，最为适应度计算依据
%           end
%           dd(j)=70-sum(d);
    else
        for i=1:1:py-1
            d(i)=sqrt((x(j,i+1)-x(j,i)).^2+(y(j,i+1)-y(j,i)).^2);     %如果不经过障碍物，则求取该个体的路径长度，最为适应度计算依据
        end
        dd(j)=500/(sum(d)+1);       %计算个体适应度
    end
end
fitvalue=dd';      %返回列向量
end